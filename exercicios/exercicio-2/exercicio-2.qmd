---
title: "Tópico 2 - Importação de dados"
---
-   Anote suas dificuldades e dúvidas para que possamos conversar na próxima aula!


## Tópico 2 - Importação

Primeiro, precisamos carregar o pacote `tidyverse` e `here`: 

```{r}
# carregue os pacotes aqui
```

Precisamos carregar as bases também: Carregue as bases de dados `base_pnud_min.csv`e `dicionario_base_pnud_min.csv` que estão na pasta `dados` do seu projeto.

```{r}
dados_pnud <- # ....
dicionario_pnud <- # ....
```

1)  Explore a base do dicionário do pnud. Quantas colunas tem? Quantas linhas tem? Quais informações essa pequena base apresenta? Busque usar funções em R.

```{r}
glimpse(dicionario_pnud)
```

2)  Use a função unique() para criar um vetor com as siglas dos estados do Brasil e salve o vetor em um objeto chamado `estados_br`.

```{r}
estados_br <- # ...
```

3) Vamos usar os dados para o ano de 2010. Para isso é necessário filtrar os dados, e vamos ver como fazer isso no próximo tópico!

```{r}
dados_pnud_2010 <-filter(dados_pnud, ano == 2010)
```

a)  Qual era a soma da população do Brasil em 2010?

```{r}
# Soma de população em 2010: 

```

b)  Qual era a média da esperança de vida da população do Brasil em 2010?

```{r}
# média: esperança de vida:

```

Arredonde o valor encontrado nesse exercício, para apresentar 1 casa decimal:

```{r}
# arredondando para ter uma casa decimal

```

c)  Qual era a mediana da esperança de vida da população do Brasil em 2010?

```{r}
# mediana: esperança de vida

```

d)  Qual era a variância da esperança de vida da população do Brasil em 2010?

```{r}
# variância: esperança de vida

```

e)  Qual era o desvio padrão da esperança de vida da população do Brasil em 2010?

```{r}
# desvio padrão: esperança de vida

```

f)  Qual foi o maior valor encontado em um estado para a esperança de vida da população do Brasil em 2010?

```{r}
# maior valor encontrado

```

g)  Qual foi o menor valor encontado em um estado para a esperança de vida da população do Brasil em 2010?

```{r}
# menor valor encontrado

```

## Tópico 3 - Manipulação

Esse tópico será abordado na aula seguinte, mas o objetivo deste exercício é já ir se acostumando com o conteúdo! A ideia é que vocês interpretem os códigos a seguir (olhando o código e o resultado), e tentem explicar o que acham que aconteceu.

Para ajudar, segue um resumo de algumas funções útes:

- `select()`: seleciona colunas da base de dados
- `filter()`: filtra linhas da base de dados
- `arrange()`: reordena as linhas da base de dados
- `mutate()`: cria novas colunas da base de dados (ou atualiza as colunas existentes)
- `group_by()` + `summarise()`: agrupa e sumariza da base de dados
- `count()`: faz uma contagem por grupos

Já vimos que podemos filtar os dados da seguinte forma: no exemplo a seguir buscamos as linhas onde o ano seja igual à 2010.

```{r}
filter(dados_pnud, ano == 2010)
```

Podemos reescrever esse código desta forma, usando o pipe, que é usado para criar sequências de códigos:

```{r}
dados_pnud |> 
  filter(ano == 2010)
```

Vamos ver o pipe em outro exemplo! O que você acha que a função abaixo fez? Execute e veja o resultado. Pode escrever com as suas palavras :)

SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  count(uf_sigla)
```


SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  count(regiao_nm)
```


SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  count(regiao_nm) |> 
  arrange(n)
```
SUA INTERPRETAÇÃO: ...

```{r}
dados_pnud_2010 |> 
  select(muni_nm, uf_sigla, pop)
```

SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  select(muni_nm, uf_sigla, pop) |> 
  filter(pop > 1000000)
```

SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  select(muni_nm, uf_sigla, pop) |> 
  filter(pop > 1000000) |> 
  arrange(desc(pop))
```

SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  select(muni_nm, uf_sigla, pop) |> 
  filter(pop > 1000000) |> 
  arrange(desc(pop)) |> 
  mutate(pop_milhoes = pop/1000000)
```

SUA INTERPRETAÇÃO: ...
```{r}
dados_pnud_2010 |> 
  select(muni_nm, uf_sigla, pop) |> 
  filter(pop > 1000000) |> 
  arrange(desc(pop)) |> 
  mutate(pop_milhoes = round(pop/1000000, 2))
```


